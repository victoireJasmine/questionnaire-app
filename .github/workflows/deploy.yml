name: Deploy to Scaleway

on:
  push:
    branches:
      - main

jobs:
  # ✅ Tests unitaires du frontend
  test_frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install frontend dependencies
        run: |
          cd frontend
          npm install
          npx vitest --version  # Vérifie que Vitest est installé

      - name: Run Frontend Unit Tests
        run: |
          cd frontend
          npm run test

  # ✅ Tests d'intégration backend
  test_backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install backend dependencies
        run: |
          cd backend
          npm install
          npx jest --version  # Vérifie que Jest est installé

      - name: Start Backend for Integration Tests
        run: |
          cd backend
          npm run start &  # Lancer le backend en arrière-plan
          sleep 5  # Attendre que le serveur démarre

      - name: Run Backend Integration Tests
        run: |
          cd backend
          npx jest __tests__/integration.test.js --runInBand  # Lancer les tests Jest d'intégration

  # ✅ Déploiement uniquement si les tests réussissent
  deploy:
    runs-on: ubuntu-latest
    needs: [test_frontend, test_backend]  # Ne déploie que si les tests passent

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SCALEWAY_SSH_KEY }}" | tr -d '\r' > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          eval "$(ssh-agent -s)"
          ssh-add ~/.ssh/id_ed25519
          ssh-keyscan -H ${{ secrets.SCALEWAY_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to server
        run: |
          ssh ${{ secrets.SCALEWAY_USER }}@${{ secrets.SCALEWAY_HOST }} <<EOF
            cd ~/questionnaire-app
            git pull origin main
            sudo docker compose down
            sudo docker compose up -d --build
            sudo systemctl restart nginx
            exit
          EOF
